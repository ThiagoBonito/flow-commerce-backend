// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Role {
  id    Int    @id @default(autoincrement())
  name  String @unique
  users User[]
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  phone     String?
  address   String?
  city      String?
  state     String?
  zipCode   String?
  orders    Order[]
  isActive  Boolean  @default(true)
  roleId    Int
  role      Role     @relation(fields: [roleId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id          Int       @id @default(autoincrement())
  name        String
  description String?
  price       Float
  stock       Int       @default(0)
  createdAt   DateTime  @default(now())
  orderItems  OrderItem[]
}

model OrderStatus {
  id    Int    @id @default(autoincrement())
  name  String @unique
  orders Order[]
}

model Order {
  id         Int         @id @default(autoincrement())
  user       User        @relation(fields: [userId], references: [id])
  userId     Int
  total      Float
  statusId   Int
  status     OrderStatus @relation(fields: [statusId], references: [id])
  createdAt  DateTime    @default(now())
  orderItems OrderItem[]
  payment    Payment?
}

model OrderItem {
  id        Int      @id @default(autoincrement())
  order     Order    @relation(fields: [orderId], references: [id])
  orderId   Int
  product   Product  @relation(fields: [productId], references: [id])
  productId Int
  quantity  Int
  price     Float
}

model PaymentStatus {
  id       Int      @id @default(autoincrement())
  name     String   @unique
  payments Payment[]
}

model PaymentMethod {
  id       Int      @id @default(autoincrement())
  name     String   @unique
  payments Payment[]
}

model Payment {
  id        Int           @id @default(autoincrement())
  order     Order         @relation(fields: [orderId], references: [id])
  orderId   Int           @unique
  statusId  Int
  status    PaymentStatus @relation(fields: [statusId], references: [id])
  methodId  Int
  amount    Float
  method    PaymentMethod @relation(fields: [methodId], references: [id])
  createdAt DateTime      @default(now())
}
